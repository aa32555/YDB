#################################################################
#								#
# Copyright (c) 2018-2022 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

image: docker:latest

services:
  - docker:dind

stages:
 - build
 - push

variables:
  DOCKER_BUILDKIT: 1

.build:
  artifacts:
    paths:
      - docker-images
  stage: build
  script:
    - mkdir docker-images
    - docker build ${ARGS} --pull -t yottadb/${REPO}:latest -f ${DOCKERFILE} .
    - docker save yottadb/${REPO}:latest > docker-images/${REPO}.tar

build-ubuntu:
  extends: .build
  variables:
    DOCKERFILE: Dockerfile
    REPO: yottadb

test-clang-tidy:
  image: ubuntu:18.04
  # NOTE: conceptually this is a test and not a build, because it has no
  # artifacts.  However, if we make it part of the `test` stage, it will only
  # run after all other builds succeed.  Since it already takes a half-hour to
  # execute, run it in parallel with all other build jobs instead.
  stage: build
  artifacts:
    paths:
      - build/warnings/
      - ci/
    when: always
    expire_in: 1 month
  script:
    - apt-get update -q
    - apt-get -q install -y --no-install-recommends >/dev/null
        ca-certificates
        clang-10
        clang-tidy-10
        file
        cmake
        git
        tcsh
        libconfig-dev
        libelf-dev
        libgcrypt-dev
        libgpg-error-dev
        libgpgme11-dev
        libicu-dev
        libncurses-dev
        libssl-dev
        moreutils
        shellcheck
        zlib1g-dev
    - ci/build.sh

commit-verify:
  image: ubuntu:18.04
  stage: build
  before_script:
    - apt-get update -qq && apt-get install -y -qq git wget gnupg
  script:
    - ci/commit_verify.sh ci/needs_copyright.sh https://gitlab.com/YottaDB/DB/YDB

build-rocky:
  extends: .build
  variables:
    DOCKERFILE: Dockerfile-rocky
    REPO: yottadb-rocky

build-debian:
  extends: .build
  variables:
    DOCKERFILE: Dockerfile-debian
    REPO: yottadb-debian

.push:
  stage: push
  script:
    - docker login -u $HUB_USERNAME -p $HUB_PASSWORD
    - docker load -i docker-images/${REPO}.tar
    - docker tag yottadb/${REPO}:latest yottadb/${REPO}:latest-master
    - docker push yottadb/${REPO}:latest-master
    - docker tag yottadb/${REPO}:latest-master yottadb/${REPO}:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - docker push yottadb/${REPO}:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - 'echo -e "FROM yottadb/${REPO}:latest-master\n ENTRYPOINT []" > BareDockerfile'
    - docker build --pull -t yottadb/${REPO}-base:latest-master -f BareDockerfile .
    - docker push yottadb/${REPO}-base:latest-master
    - docker tag yottadb/${REPO}-base:latest-master yottadb/${REPO}-base:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - docker push yottadb/${REPO}-base:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
  only:
    - master@YottaDB/DB/YDB

push-ubuntu:
  extends: .push
  variables:
    REPO: yottadb

push-rocky:
  extends: .push
  variables:
    REPO: yottadb-rocky

push-debian:
  extends: .push
  variables:
    REPO: yottadb-debian

.push-release:
  stage: push
  script:
    - docker login -u $HUB_USERNAME -p $HUB_PASSWORD
    - docker load -i docker-images/${REPO}.tar
    - docker push yottadb/${REPO}:latest
    - docker tag yottadb/${REPO}:latest yottadb/${REPO}:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - docker push yottadb/${REPO}:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - 'echo -e "FROM yottadb/${REPO}:latest\n ENTRYPOINT []" > BareDockerfile'
    - docker build --pull -t yottadb/${REPO}-base:latest -f BareDockerfile .
    - docker push yottadb/${REPO}-base:latest
    - docker tag yottadb/${REPO}-base:latest yottadb/${REPO}-base:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
    - docker push yottadb/${REPO}-base:$(grep YDB_ZYRELEASE sr_*/release_name.h | grep -o '\(r[0-9.]*\)' | grep -v '^r$' | sort -u)
  only:
    - tags

push-release-ubuntu:
  extends: .push-release
  variables:
    REPO: yottadb

push-release-rocky:
  extends: .push-release
  variables:
    REPO: yottadb-rocky

push-release-debian:
  extends: .push-release
  variables:
    REPO: yottadb-debian
